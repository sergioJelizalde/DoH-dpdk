// Auto-generated MLP weights + pointers for C inference

#pragma once

#define ALIGN16 __attribute__((aligned(16)))

#define NUM_LAYERS 2

static const int LAYER_SIZES[NUM_LAYERS+1] = { 8, 8, 1 };

// Shape: (8, 8)
static const float W0[64] ALIGN16 = {
    1.281913, -9.752725, -1.467862, 1.410482, 0.000000, -20.708228, 0.799585, 0.790002, 0.000000, -0.000000, 0.000000, -0.000000, -0.000000, -0.000000, 0.000000, 0.000000, -2.095403, 7.585710, -0.667902, -10.435758, 0.000000, -14.833413, 0.848891, 0.196955, 1.200205, 0.555019, 1.020876, -0.821308, -0.000000, -0.146787, -0.681658, -1.132375, 0.533294, -0.128587, 0.560783, -1.795905, 0.000000, -0.092132, 0.170411, 0.504981, -13.332703, -8.109579, -7.673246, 1.270417, 0.000000, 0.000309, 4.751231, 1.478213, 3.458486, 0.152597, 4.446382, 1.359423, 0.000000, 0.034396, -3.593733, 8.493924, 0.935772, -0.084343, 0.836625, -1.050516, -0.000000, 0.127997, -0.423652, -0.907398
};

// Shape: (8,)
static const float B0[8] ALIGN16 = {
    0.503526, -0.979433, 0.009653, 0.685221, -0.521067, -1.686080, -1.399349, -2.123727
};

// Shape: (8, 1)
static const float W1[8] ALIGN16 = {
    -8.232738, 15.520350, 9.562900, 4.244907, -0.000000, -56.819376, -0.198630, -3.317996
};

// Shape: (1,)
static const float B1[1] ALIGN16 = {
    3.423867
};

// Weight & bias pointers per layer
static const float *WEIGHTS[NUM_LAYERS] = { W0, W1 };
static const float *BIASES[NUM_LAYERS]  = { B0, B1 };

#undef ALIGN16
